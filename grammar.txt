Program     ->  (DecVar | DecFunc)*

DecVar      ->  Type ID ('=' E1)? ';'

DecFunc     ->  DEF Type ID '(' ParamList? ')' Block

ParamList   ->  Type ID (',' Type ID)*

Block       ->  '{' DecVar* Stmt* '}'

Stmt        ->  ID Decl ';' |
                IF '(' E1 ')' Block (ELSE Block)? |
                WHILE '(' E1 ')' Block |
                RETURN E1? ';' |
                BREAK ';' |
                CONTINUE ';'

Decl        ->  Assign |
                FuncCall |

Assign      ->  '=' E1

FuncCall    ->  '(' ArgList? ')'

ArgList     ->  E1 (',' E1)*

E1          ->  E2 E1'

E1'         ->  '||' E2 E1' |
                €

E2          ->  E3 E2'

E2'         ->  '&&' E3 E2' |
                €

E3          ->  E4 E3'

E3'         ->  '==' E4 E3' |
                '!=' E4 E3' |
                €

E4          ->  E5 E4'

E4'         ->  '<' E5 E4' |
                '<=' E5 E4' |
                '>' E5 E4' |
                '>=' E5 E4' |
                €

E5          ->  E6 E5'

E5'         ->  '+' E6 E5' |
                '-' E6 E5' |
                €

E6          ->  E7 E6'

E6'         ->  '*' E7 E6' |
                '/' E7 E6' |
                €

E7          ->  '!' E7 |
                E8

E8          ->  '-' E8 |
                E9

E9          ->  DEC |
                ID |
                FuncCall |
                '(' E1 ')'

Type        ->  INT | VOID
